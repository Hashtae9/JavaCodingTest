import java.util.Arrays;
import java.util.Scanner;

// d[i][0] : i 번째 0으로 끝나는 수 = d[i-1][0]
// d[i][1] : i 번째 1으로 끝나는 수 = d[i-1][0] + d[i-1][1] = d[i][0] + d[i-1][1]
// d[i][2] : i 번째 2으로 끝나는 수 = d[i-1][0] + d[i-1][1] + d[i-1][2] = d[i][1] + d[i-1][2]
// d[i][3] : i 번째 3으로 끝나는 수 = d[i][2] + d[i-1][3]
// d[i][4] : i 번째 4으로 끝나는 수 = d[i][3] + d[i-1][4]
// d[i][5] : i 번째 5으로 끝나는 수 = d[i][4] + d[i-1][5]
// d[i][6] : i 번째 6으로 끝나는 수 = d[i][5] + d[i-1][6]
// d[i][7] : i 번째 7으로 끝나는 수 = d[i][6] + d[i-1][7]
// d[i][8] : i 번째 8으로 끝나는 수 = d[i][7] + d[i-1][8]
// d[i][9] : i 번째 9으로 끝나는 수 = d[i][8] + d[i-1][9]
public class BOJ11057 {
    static int[][] d;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        d = new int[n + 1][10];
        d[1][0] = 1;
        d[1][1] = 1;
        d[1][2] = 1;
        d[1][3] = 1;
        d[1][4] = 1;
        d[1][5] = 1;
        d[1][6] = 1;
        d[1][7] = 1;
        d[1][8] = 1;
        d[1][9] = 1;

        for (int i = 2; i <= n; i++) {
            d[i][0] = d[i - 1][0] % 10007;
            d[i][1] = (d[i][0] + d[i - 1][1]) % 10007;
            d[i][2] = (d[i][1] + d[i - 1][2]) % 10007;
            d[i][3] = (d[i][2] + d[i - 1][3]) % 10007;
            d[i][4] = (d[i][3] + d[i - 1][4]) % 10007;
            d[i][5] = (d[i][4] + d[i - 1][5]) % 10007;
            d[i][6] = (d[i][5] + d[i - 1][6]) % 10007;
            d[i][7] = (d[i][6] + d[i - 1][7]) % 10007;
            d[i][8] = (d[i][7] + d[i - 1][8]) % 10007;
            d[i][9] = (d[i][8] + d[i - 1][9]) % 10007;
        }

        System.out.println(Arrays.stream(d[n]).sum() % 10007);
    }
}
